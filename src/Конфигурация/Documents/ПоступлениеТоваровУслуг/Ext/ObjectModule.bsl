

Функция КонтрольОтрицательныхОстатков()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТоварыНаСкладахОстатки.Номенклатура КАК Номенклатура,
		|	ТоварыНаСкладахОстатки.Склад КАК Склад,
		|	ТоварыНаСкладахОстатки.КоличествоОстаток КАК КоличествоОстаток
		|ИЗ
		|	РегистрНакопления.ТоварыНаСкладах.Остатки(, Характеристика = &Ссылка) КАК ТоварыНаСкладахОстатки
		|ГДЕ
		|	ТоварыНаСкладахОстатки.КоличествоОстаток < 0";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Сообщить("Образовались отрицательные остатки по товару " 
				+ ВыборкаДетальныеЗаписи.Номенклатура 
				+ " с характеристикой "
				+ Ссылка
				+ " на складе " + ВыборкаДетальныеЗаписи.Склад
				+ " в количестве " + -ВыборкаДетальныеЗаписи.КоличествоОстаток);
		КонецЦикла; 
		Возврат Истина;
	КонецЕсли;
	Возврат Ложь;		
КонецФункции
 

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Движения.ТоварыНаСкладах.Прочитать();
	// Движения.ТоварыНаСкладах.Очистить();
	// ТЗ = Движения.ТоварыНаСкладах.Выгрузить();
	Движения.ТоварыНаСкладах.Записать();
	
	Если КонтрольОтрицательныхОстатков() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	// Если
	// Свойство: Движения: Удаление движений: Удалять автоматически
	// или                                    Удалять автоматически при отмене проведения
	// то проиходит повторная запись пустого движения 
КонецПроцедуры
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДоговора = Товары.Итог("Стоимость") + Услуги.Итог("Стоимость");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)

	// регистр ТоварыНаСкладах Приход
	//Движения.ТоварыНаСкладах.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ТоварыНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Характеристика = Ссылка;
		Движение.Склад = Склад;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;
	
	#Область КонтрольОтрицательныхОстатковПриПерепроведении
	Движения.ТоварыНаСкладах.Записать();

	Если КонтрольОтрицательныхОстатков() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	#КонецОбласти 
	




	// регистр СтоимостьТоваров Приход
	Движения.СтоимостьТоваров.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.СтоимостьТоваров.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.Характеристика = Ссылка;
		Движение.Стоимость = ТекСтрокаТовары.Стоимость;
		Движение.Количество = ТекСтрокаТовары.Количество;
	КонецЦикла;

	// регистр ЦеныНоменклатуры
	Движения.ЦеныНоменклатуры.Записывать = Истина;
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		Движение = Движения.ЦеныНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
		Движение.ВидЦены = Справочники.ВидыЦен.Закупочная;
		Движение.Цена = ТекСтрокаТовары.Цена;
	КонецЦикла;

	// регистр ЦеныНоменклатуры
	Движения.ЦеныНоменклатуры.Записывать = Истина;
	Для Каждого ТекСтрокаУслуги Из Услуги Цикл
		Движение = Движения.ЦеныНоменклатуры.Добавить();
		Движение.Период = Дата;
		Движение.Номенклатура = ТекСтрокаУслуги.Номенклатура;
		Движение.ВидЦены = Справочники.ВидыЦен.Закупочная;
		Движение.Цена = СуммаДоговора;
	КонецЦикла;

КонецПроцедуры
