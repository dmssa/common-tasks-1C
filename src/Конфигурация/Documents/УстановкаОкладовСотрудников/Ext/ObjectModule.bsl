Функция ПолучитьСписокОкладов(Сотрудники, Дата, Должности = Неопределено, Подразделения = Неопределено) Экспорт
	Результат = Новый Массив();
	Если НЕ ЗначениеЗаполнено(Сотрудники) Тогда
		Возврат Результат;
	КонецЕсли;
	Если Сотрудники.Количество() = 0 Тогда
		Возврат Результат;
	КонецЕсли;
	 
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОкладыСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	ОкладыСотрудниковСрезПоследних.Должность КАК Должность,
		|	ОкладыСотрудниковСрезПоследних.Оклад КАК Оклад,
		|	ОкладыСотрудниковСрезПоследних.Период КАК Период
		|ИЗ
		|	РегистрСведений.ОкладыСотрудников.СрезПоследних(&Дата, Сотрудник В (&Сотрудники)) КАК ОкладыСотрудниковСрезПоследних
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОкладыСотрудниковСрезПоследних.Период УБЫВ";
	ЕстьДолжность = ЗначениеЗаполнено(Должности);
	ЕстьПодразделение = ЗначениеЗаполнено(Подразделения);
	
	Отбор = Новый ТаблицаЗначений;
		
	Если ЕстьДолжность ИЛИ ЕстьПодразделение Тогда
		ТекстЗамены = "Сотрудник В (&Сотрудники)";
		Номер       = СтрНайти(Запрос.Текст, ТекстЗамены);
		
		СоставЗапроса = Новый Массив(3); 
		СоставЗапроса[0] = Лев(Запрос.Текст, Номер - 1);
		СоставЗапроса[2] = Прав(Запрос.Текст, СтрДлина(Запрос.Текст) - Номер - СтрДлина(ТекстЗамены) + 1);
		НовыйТекст = "(Сотрудник";
		Отбор.Колонки.Добавить("Сотрудник", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
		Если ЕстьДолжность Тогда
			Отбор.Колонки.Добавить("Должность", Новый ОписаниеТипов("СправочникСсылка.Должности"));
			НовыйТекст = НовыйТекст + ",Должность";
		КонецЕсли; 
		Если ЕстьПодразделение Тогда
			Отбор.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.Подразделения"));
			НовыйТекст = НовыйТекст + ",Подразделение";
		КонецЕсли; 
		НовыйТекст = НовыйТекст + ") В (&Отбор)";
		
		СоставЗапроса[1] = НовыйТекст;
		Запрос.Текст = СтрСоединить(СоставЗапроса);
		
		Для Индекс = 0 По Сотрудники.ВГраница() Цикл
			СтрокаОтбора = Отбор.Добавить();
			СтрокаОтбора.Сотрудник = Сотрудники[Индекс];
			Если ЕстьДолжность Тогда
				СтрокаОтбора.Должность = Должности[Индекс];
			КонецЕсли; 
			Если ЕстьПодразделение Тогда
				СтрокаОтбора.Подразделение = Подразделения[Индекс];
			КонецЕсли;
		КонецЦикла; 
		
		Запрос.УстановитьПараметр("Отбор", Отбор);
	Иначе
		Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	КонецЕсли; 
	
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Индекс = 0 По Сотрудники.ВГраница() Цикл
		Сотрудник = Сотрудники[Индекс];
		Запись = Новый Структура("Сотрудник, Оклад,        Должность,    Подразделение"
								, Сотрудник, Новый Массив, Новый Массив, Новый Массив);
		Период = Неопределено; 
		
		СтруктураПоиска = Новый Структура("Сотрудник", Сотрудник);
		Если ЕстьДолжность Тогда
			СтруктураПоиска.Вставить("Должность", Должности[Индекс]);
		КонецЕсли; 
		Если ЕстьПодразделение Тогда
			СтруктураПоиска.Вставить("Подразделение", Подразделения[Индекс]);
		КонецЕсли; 
		
		Выборка.Сбросить();
		Пока Выборка.НайтиСледующий(СтруктураПоиска) Цикл
			Если Период = Неопределено Тогда
				Период = Выборка.Период;
			ИначеЕсли Выборка.Период < Период Тогда
				Прервать;
			КонецЕсли; 	
			Запись.Оклад.Добавить(Выборка.Оклад);
			Запись.Должность.Добавить(Выборка.Должность);
			Запись.Подразделение.Добавить(Выборка.Подразделение);
		КонецЦикла;
	    
		Результат.Добавить(Запись);
	КонецЦикла; 
	
	Возврат Результат;
КонецФункции


Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр ОкладыСотрудников
	Движения.ОкладыСотрудников.Записывать = Истина;
	Для Каждого ТекСтрокаОклады Из Оклады Цикл
		Движение = Движения.ОкладыСотрудников.Добавить();
		Движение.Период    = Дата;
		Движение.Сотрудник = ТекСтрокаОклады.Сотрудник;
		Движение.Должность = ТекСтрокаОклады.Должность;
		Движение.Оклад     = ТекСтрокаОклады.Оклад;
	КонецЦикла;
КонецПроцедуры


Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
		СтрокаОклады = Оклады.Добавить();
		СтрокаОклады.Сотрудник = ДанныеЗаполнения.Ссылка;
		СтрокаОклады.Должность = ДанныеЗаполнения.Должность;
		СтрокаОклады.Подразделение = ДанныеЗаполнения.Должность.Владелец;
	КонецЕсли;
КонецПроцедуры

