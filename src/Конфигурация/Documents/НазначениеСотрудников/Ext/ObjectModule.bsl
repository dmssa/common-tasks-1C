
Процедура ОбработкаПроведения(Отказ, Режим)	

	СотрудникиДляЗаполнения = Новый Массив;
	СотрудникиДляСнятия     = Новый Массив;
	
	ВидДолжностиОсновная    = Перечисления.ВидЗанимаемойДолжности.Основная;
	
	Если Проведен Тогда
		// Ищем записанные основные должности в регистре, для проверки на актуальность
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	НазначенияСотрудников.Сотрудник КАК Сотрудник,
			|	НазначенияСотрудников.Должность КАК Должность
			|ИЗ
			|	РегистрСведений.НазначенияСотрудников КАК НазначенияСотрудников
			|ГДЕ
			|	НазначенияСотрудников.Регистратор = &Регистратор
			|	И НазначенияСотрудников.ВидНазначения = &ВидНазначения";
		
		Запрос.УстановитьПараметр("Регистратор", Ссылка);
		Запрос.УстановитьПараметр("ВидНазначения", ВидДолжностиОсновная);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.Сотрудник.Должность = Выборка.Должность Тогда
					СотрудникиДляСнятия.Добавить(Выборка.Сотрудник);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли; 
	
	// регистр НазначенияСотрудников
	Движения.НазначенияСотрудников.Записывать = Истина;
	Для Каждого ТекСтрока Из НазначениеНаДолжность Цикл
		Движение = Движения.НазначенияСотрудников.Добавить();
		Движение.Период = ТекСтрока.Дата;
		Движение.Сотрудник = ТекСтрока.Сотрудник;
		Движение.Должность = ТекСтрока.Должность;
		Движение.ВидНазначения = ТекСтрока.ВидЗанимаемойДолжности;
		
		Если ТекСтрока.ВидЗанимаемойДолжности = ВидДолжностиОсновная Тогда
		   Если ТекСтрока.Сотрудник.Должность <> ТекСтрока.Должность Тогда
				// Изменяются документом, обновляем должность
				СотрудникиДляЗаполнения.Добавить(ТекСтрока.Сотрудник);
			КонецЕсли;
			Индекс = СотрудникиДляСнятия.Найти(ТекСтрока.Сотрудник); 
			Если Индекс <> Неопределено Тогда
				// Остались в документе, не обновляем должность
				СотрудникиДляСнятия.Удалить(Индекс);
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла;
	
	// регистр НазначенияСотрудников
	Для Каждого ТекСтрока Из СнятиеСДолжности Цикл
		Движение = Движения.НазначенияСотрудников.Добавить();
		Движение.Период = ТекСтрока.Дата;
		Движение.Сотрудник = ТекСтрока.Сотрудник;
		Движение.Должность = ТекСтрока.Должность;
		Движение.ВидНазначения = Перечисления.ВидЗанимаемойДолжности.НеЗанимает;
		Если ТекСтрока.Сотрудник.Должность = ТекСтрока.Должность Тогда
			СотрудникиДляСнятия.Добавить(ТекСтрока.Сотрудник);
		КонецЕсли; 
	КонецЦикла;

	// Обновляем должности у сотрудников
	Если СотрудникиДляЗаполнения.Количество() <> 0 Тогда
		
		Движения.Записать();
		
		Запрос = Новый Запрос;
		// Дата установки должности отсутствует или меньше текущей
		Запрос.Текст =
			 
			"ВЫБРАТЬ
			|	НазначенияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
			|	НазначенияСотрудниковСрезПоследних.Должность КАК Должность
			|ПОМЕСТИТЬ ДанныеРегистра
			|ИЗ
			|	РегистрСведений.НазначенияСотрудников.СрезПоследних(
			|			,
			|			Сотрудник В (&Сотрудники)
			|				И ВидНазначения = &ВидНазначения) КАК НазначенияСотрудниковСрезПоследних
			|ГДЕ
			|	(НазначенияСотрудниковСрезПоследних.Период = NULL
			|			ИЛИ НазначенияСотрудниковСрезПоследних.Период < &Дата)
			|
			|ИНДЕКСИРОВАТЬ ПО
			|	Сотрудник,
			|	Должность
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	НазначениеНаДолжность.Сотрудник КАК Сотрудник,
			|	ДанныеРегистра.Должность КАК Должность
			|ИЗ
			|	Документ.НазначениеСотрудников.НазначениеНаДолжность КАК НазначениеНаДолжность
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ДанныеРегистра.Сотрудник КАК Сотрудник,
			|			ДанныеРегистра.Должность КАК Должность
			|		ИЗ
			|			ДанныеРегистра КАК ДанныеРегистра) КАК ДанныеРегистра
			|		ПО (ДанныеРегистра.Сотрудник = НазначениеНаДолжность.Сотрудник)
			|			И (ДанныеРегистра.Должность = НазначениеНаДолжность.Должность)
			|ГДЕ
			|	НазначениеНаДолжность.Ссылка = &Ссылка
			|	И НазначениеНаДолжность.ВидЗанимаемойДолжности = &ВидНазначения";

		Запрос.УстановитьПараметр("Дата", Дата);
		Запрос.УстановитьПараметр("Сотрудники", СотрудникиДляЗаполнения);
		Запрос.УстановитьПараметр("ВидНазначения", ВидДолжностиОсновная);
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий()  Цикл
			Сотрудник = Выборка.Сотрудник.ПолучитьОбъект();
			Если Выборка.Должность = NULL Тогда
				// ???
				Сотрудник.Должность = Справочники.Должности.ПустаяСсылка();
			Иначе
				Сотрудник.Должность = Выборка.Должность;
			КонецЕсли; 
			Сотрудник.Записать();
		КонецЦикла;
	КонецЕсли;
	Если СотрудникиДляСнятия.Количество() <> 0 Тогда
		Движения.Записать();
		УстановитьТекущуюДолжностьСотрудников(СотрудникиДляСнятия);
	КонецЕсли; 
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	СотрудникиДляОтмены = Новый Массив();
	// Сотрудники с основной должностью в документе
	Для каждого ТекСтрока Из НазначениеНаДолжность Цикл
		Если ТекСтрока.ВидЗанимаемойДолжности = Перечисления.ВидЗанимаемойДолжности.Основная 
		   И ТекСтрока.Должность = ТекСтрока.Сотрудник.Должность Тогда
			СотрудникиДляОтмены.Добавить(ТекСтрока.Сотрудник);
		КонецЕсли; 
	КонецЦикла;
	Для каждого ТекСтрока Из СнятиеСДолжности Цикл
		СотрудникиДляОтмены.Добавить(ТекСтрока.Сотрудник);
	КонецЦикла; 
	// Записываем пустые движения             
	Движения.НазначенияСотрудников.Очистить();
	Движения.НазначенияСотрудников.Записать();
	 
	Если Не СотрудникиДляОтмены.Количество() = 0 Тогда
		УстановитьТекущуюДолжностьСотрудников(СотрудникиДляОтмены); 
	КонецЕсли;
	 
КонецПроцедуры

Процедура УстановитьТекущуюДолжностьСотрудников(Сотрудники)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НазначенияСотрудниковСрезПоследних.Сотрудник КАК Сотрудник,
		|	НазначенияСотрудниковСрезПоследних.Сотрудник.Должность КАК ТекДолжность,
		|	НазначенияСотрудниковСрезПоследних.Должность КАК Должность
		|ИЗ
		|	РегистрСведений.НазначенияСотрудников.СрезПоследних(
		|			,
		|			Сотрудник В (&Сотрудники)
		|				И ВидНазначения = &ВидНазначения) КАК НазначенияСотрудниковСрезПоследних
		|ГДЕ
		|	НазначенияСотрудниковСрезПоследних.Сотрудник.Должность <> НазначенияСотрудниковСрезПоследних.Должность";
	
	Запрос.УстановитьПараметр("Сотрудники", Сотрудники);
	Запрос.УстановитьПараметр("ВидНазначения", Перечисления.ВидЗанимаемойДолжности.Основная);
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать();
	Для каждого Сотрудник Из Сотрудники Цикл
		СотрудникОбъект = Сотрудник.ПолучитьОбъект();
		Выборка.Сбросить();
		Если Выборка.НайтиСледующий(Новый Структура("Сотрудник", Сотрудник)) Тогда
			СотрудникОбъект.Должность = Выборка.Должность;
		Иначе
			СотрудникОбъект.Должность = Справочники.Должности.ПустаяСсылка();
		КонецЕсли;
		СотрудникОбъект.Записать();
	КонецЦикла; 
КонецПроцедуры
 
